/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.amethyst.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.amethyst.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.amethyst.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.amethyst.db.model.tables.records.AmethystReinforcementDataRecord;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.ByteBooleanConverter;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AmethystReinforcementData extends TableImpl<AmethystReinforcementDataRecord> {

	private static final long serialVersionUID = -149549436;

	/**
	 * The reference instance of <code>nucleus.amethyst_reinforcement_data</code>
	 */
	public static final AmethystReinforcementData AMETHYST_REINFORCEMENT_DATA = new AmethystReinforcementData();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AmethystReinforcementDataRecord> getRecordType() {
		return AmethystReinforcementDataRecord.class;
	}

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.reinfid</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, Long> REINFID = createField("reinfid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.creation_time</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, Timestamp> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.creator</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, UUID> CREATOR = createField("creator", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.group_id</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, Long> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.hardening_time</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, Timestamp> HARDENING_TIME = createField("hardening_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.strength</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, Integer> STRENGTH = createField("strength", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.max_strength</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, Integer> MAX_STRENGTH = createField("max_strength", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.is_public</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, Boolean> IS_PUBLIC = createField("is_public", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "", new ByteBooleanConverter());

	/**
	 * The column <code>nucleus.amethyst_reinforcement_data.unbreakable</code>.
	 */
	public final TableField<AmethystReinforcementDataRecord, Boolean> UNBREAKABLE = createField("unbreakable", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "", new ByteBooleanConverter());

	/**
	 * Create a <code>nucleus.amethyst_reinforcement_data</code> table reference
	 */
	public AmethystReinforcementData() {
		this("amethyst_reinforcement_data", null);
	}

	/**
	 * Create an aliased <code>nucleus.amethyst_reinforcement_data</code> table reference
	 */
	public AmethystReinforcementData(String alias) {
		this(alias, AMETHYST_REINFORCEMENT_DATA);
	}

	private AmethystReinforcementData(String alias, Table<AmethystReinforcementDataRecord> aliased) {
		this(alias, aliased, null);
	}

	private AmethystReinforcementData(String alias, Table<AmethystReinforcementDataRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AmethystReinforcementDataRecord, Long> getIdentity() {
		return Keys.IDENTITY_AMETHYST_REINFORCEMENT_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AmethystReinforcementDataRecord> getPrimaryKey() {
		return Keys.KEY_AMETHYST_REINFORCEMENT_DATA_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AmethystReinforcementDataRecord>> getKeys() {
		return Arrays.<UniqueKey<AmethystReinforcementDataRecord>>asList(Keys.KEY_AMETHYST_REINFORCEMENT_DATA_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AmethystReinforcementData as(String alias) {
		return new AmethystReinforcementData(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AmethystReinforcementData rename(String name) {
		return new AmethystReinforcementData(name, null);
	}
}
